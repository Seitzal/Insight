package eu.seitzal.insight

import java.io.PrintWriter
import java.io.IOException
import java.util.Calendar
import java.text.SimpleDateFormat


class HtmlBuilder (dataset : DataFrame, title : String) {

  def this(dataset: DataFrame) {
    this(dataset, "Untitled dataset")
  }

  def style =
    "body {\n" +
    "  font-family: \"Helvetica Neue\", sans-serif;\n" +
    "}\n" +
    "table, tr, td, th {\n" +
    "  border: 1px solid black;\n" +
    "  border-collapse: collapse;\n" +
    "}\n" +
    "td {\n" +
    "  padding: 5px;\n" +
    "}\n" +
    "th {\n" +
    "  font-weight: normal;\n" +
    "  text-align: left;\n" +
    "  padding: 5px;\n" +
    "  color: #ffffff;\n" +
    "  background-color: #555555;\n" +
    "}\n"

  def header =
    "<!DOCTYPE html>\n" +
    "<head>\n" +
    "<title>" + title + "</title>\n" +
    "<style type=\"text/css\">\n" +
    style +
    "</style>\n" + 
    "</head>\n" +
    "<body>\n" +
    "<div align=\"center\"><h1>" + title + "</h1></div>\n"

  def timestamp = {
    val time = Calendar.getInstance().getTime()
    val format = new SimpleDateFormat("yyyy/MM/dd, HH:mm:ss z")
    format.format(time)
  }

  def footer = 
    "<div align=\"center\"><i><br />Table generated by Insight version " +
    VERSION +
    ", " +
    timestamp +
    "</i></div>\n</body>\n</html>\n"
  
  def table = {
    val init = "<table align=\"center\">\n<tbody>\n"

    val headers =
      "<tr>\n" +
      dataset.getRows.head.map(
        cname =>
        "<th>" + cname + "</td>\n"
      ).mkString +
      "</tr>\n"

    val body =
      dataset.getRows.tail.map(
        row =>
        "<tr>\n" +
        row.map(
          item =>
          "<td>" + item + "</td>\n"
        ).mkString +
        "</tr>\n"
      ).mkString

    val end = "</tbody>\n</table>\n"
    
    init + headers + body + end
  }

  def genHtml = header + table + footer

  @throws(classOf[IOException])
  def export(path : String) : Unit = {
    val pw = new PrintWriter(path, "UTF-8")
    pw.write(genHtml)
    pw.close()
  }

}